@model Web_HW03.Models.BlogPost
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService Authorization
@{ 
    var canEdit = (await Authorization.AuthorizeAsync(User, MyIdentityData.BlogPolicy_Edit)).Succeeded;
}
@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>BlogPost</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Body)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Body)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Posted)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Posted)
        </dd>
        <dd class="col-sm-10">            
            <strong>Tags</strong>
            @if (Model.PostTags != null && Model.PostTags.Any())
            {
                <ul>
                @foreach (var postTag in Model.PostTags)
                {
                    <li><a asp-controller="Tags" asp-action="TagList" asp-route-id="@postTag.TagId">@postTag.Tag.TagName</a></li>
                }
                </ul>
            }
        </dd>
    </dl>
</div>
<div>
    @if (canEdit)
    {
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
    }
    <a asp-action="Index">Back to List</a>
</div>
